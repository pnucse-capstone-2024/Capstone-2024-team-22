input {
  couchdb_changes {
    db => "airquality"
    host => "couchdb"
    port => 5984
    username => "admin"
    password => "password"
    type => "airquality"
  }

  beats {
    port => 5044
  }

  tcp {
    port => 50000
  }
}

filter {
  # json 필터로 CouchDB에서 온 문서를 파싱
  json {
    source => "message"
  }

  # 만약 데이터를 CouchDB에서 `_source` 키로 받아오면, 각 필드를 개별적으로 추출
  split {
    field => "[docs]"
  }

  # 필요한 필드를 변환 또는 추가적으로 가공할 수 있는 필터
  mutate {
    # 숫자로 처리할 필드들을 변환
    convert => {
      "[docs][pm10]" => "integer"
      "[docs][ozone]" => "float"
      "[docs][no2]" => "float"
      "[docs][co]" => "float"
    }
    # 불필요한 필드 제거
    remove_field => [ "_id", "_rev", "@version", "message" ]
  }

  # 만약 날짜 데이터가 있어 타임스탬프 필드로 사용하고 싶을 경우
  date {
    match => ["[docs][date]", "yyyy"]
    target => "@timestamp"
  }

  # 필드 이름 변경 예시 (필요할 경우)
  mutate {
    rename => { "[docs][date]" => "measurement_date" }
    rename => { "[docs][region]" => "location" }
  }

  # 특정 필드 기반으로 추가적인 변환이 필요할 경우
  if "[docs][pm10]" > 100 {
    mutate {
      add_field => { "warning" => "High PM10 levels" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "airquality"
    user => "elastic"
    password => "changeme"
  }

  # 디버깅을 위해 stdout에도 출력
  stdout {
    codec => rubydebug
  }
}
